# Creates a container which acts as a bare bones non-VM based Mender
# installation, for use in tests.
FROM ubuntu:22.04 AS build

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y make git build-essential golang liblzma-dev jq libssl-dev libglib2.0-dev curl

WORKDIR /go/src/github.com/mendersoftware/mender
COPY ./ .
RUN make GOPATH=/go clean
RUN make GOPATH=/go prefix=/mender-install install
RUN jq ".ServerCertificate=\"/usr/share/doc/mender-client/examples/demo.crt\" | .ServerURL=\"https://docker.mender.io/\"" \
    < examples/mender.conf.demo > /mender-install/etc/mender/mender.conf

# Install mender-artifact from upstream
RUN curl -fsSL https://downloads.mender.io/repos/debian/gpg > /etc/apt/trusted.gpg.d/mender.asc && \
    echo "deb [arch=$(dpkg --print-architecture)] https://downloads.mender.io/repos/debian ubuntu/$(. /etc/lsb-release && echo $DISTRIB_CODENAME)/experimental main" > \
        /etc/apt/sources.list.d/mender.list && \
    apt-get update && apt-get install mender-artifact
RUN mender-artifact write bootstrap-artifact \
        --artifact-name original \
        --device-type docker-client \
        --provides "rootfs-image.version:original" \
        --output-path /bootstrap.mender

FROM ubuntu:22.04

RUN apt update && apt install -y openssh-server

# Set no password
RUN sed -ie 's/^root:[^:]*:/root::/' /etc/shadow
RUN sed -ie 's/^UsePAM/#UsePam/' /etc/ssh/sshd_config
RUN echo 'PermitEmptyPasswords yes\n\
PermitRootLogin yes\n\
Port 22\n\
Port 8822\n' >> /etc/ssh/sshd_config

COPY --from=build /mender-install/usr/bin/mender /usr/bin/mender
COPY --from=build /mender-install/etc/mender /etc/mender
COPY --from=build /mender-install/usr/share/mender /usr/share/mender
COPY --from=build /mender-install/usr/share/doc/mender-client /usr/share/doc/mender-client
COPY --from=build /mender-install/lib/systemd/system/mender-client.service /lib/systemd/system/mender-client.service
COPY --from=build /mender-install/usr/share/dbus-1/system.d/io.mender.AuthenticationManager.conf /usr/share/dbus-1/system.d/io.mender.AuthenticationManager.conf
COPY --from=build /mender-install/usr/share/dbus-1/system.d/io.mender.UpdateManager.conf /usr/share/dbus-1/system.d/io.mender.UpdateManager.conf
COPY --from=build /bootstrap.mender /var/lib/mender/bootstrap.mender
RUN mkdir -p /var/lib/mender && echo device_type=docker-client > /var/lib/mender/device_type

COPY tests/entrypoint.sh /

CMD /entrypoint.sh

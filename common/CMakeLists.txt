set(json_sources "$<$<STREQUAL:${PLATFORM},linux_x86>:nlohmann/nlohmann_json.cpp>")
set(kv_db_sources "$<$<STREQUAL:${PLATFORM},linux_x86>:lmdb/lmdb_kv_db.cpp>")

add_library(common_json STATIC json/platform/${json_sources})
target_include_directories(common_json PRIVATE ../)
if(${json_sources} MATCHES ".*nlohmann.*")
  target_include_directories(common_json PRIVATE ../vendor/json/include/)
endif()

add_library(common_kv_db STATIC kv_db/platform/${kv_db_sources})
target_include_directories(common_kv_db PRIVATE ../)
if(${kv_db_sources} MATCHES ".*lmdb.*")
  target_compile_features(common_kv_db PRIVATE cxx_std_17)
  target_include_directories(common_kv_db PRIVATE ../)
  target_include_directories(common_kv_db PRIVATE ../vendor/lmdbxx/)

  include(FindPkgConfig)
  pkg_check_modules(LMDB IMPORTED_TARGET lmdb)
  if (LMDB_FOUND)
	target_link_libraries(common_kv_db PUBLIC PkgConfig::LMDB)
  else()
	find_library(LMDB_LIB lmdb)
	target_link_libraries(common_kv_db PUBLIC "${LMDB_LIB}")
  endif()
endif()
